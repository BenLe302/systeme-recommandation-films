# DÃ©ploiement Kubernetes pour l'API FastAPI
# Auteur: Dady Akrou Cyrille
# Email: cyrilledady0501@gmail.com

apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendation-api
  namespace: movie-recommendation
  labels:
    app: recommendation-api
    component: backend
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: recommendation-api
  template:
    metadata:
      labels:
        app: recommendation-api
        component: backend
        version: v1.0.0
    spec:
      containers:
      - name: recommendation-api
        image: movie-recommendation-api:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: PYTHONPATH
          value: "/app"
        - name: CONFIG_PATH
          value: "/app/config/config.yaml"
        - name: LOG_LEVEL
          value: "INFO"
        - name: DATABASE_URL
          value: "sqlite:///app/data/recommendations.db"
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: data-volume
          mountPath: /app/data
        - name: models-volume
          mountPath: /app/models
        - name: logs-volume
          mountPath: /app/logs
        - name: config-volume
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: data-pvc
      - name: models-volume
        persistentVolumeClaim:
          claimName: models-pvc
      - name: logs-volume
        persistentVolumeClaim:
          claimName: logs-pvc
      - name: config-volume
        configMap:
          name: recommendation-config
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: recommendation-api-service
  namespace: movie-recommendation
  labels:
    app: recommendation-api
    component: backend
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: recommendation-api

---
apiVersion: v1
kind: Service
metadata:
  name: recommendation-api-nodeport
  namespace: movie-recommendation
  labels:
    app: recommendation-api
    component: backend
spec:
  type: NodePort
  ports:
  - port: 8000
    targetPort: 8000
    nodePort: 30800
    protocol: TCP
    name: http
  selector:
    app: recommendation-api